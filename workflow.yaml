workflow:
  - step: "Define Business Problem"
    description: "Identify and refine the core business problem before moving forward."
    input: ["User Conversation"]
    output: "Confirmed Business Problem Statement"
    rules:
      - "Keep iterating until the user explicitly confirms the problem statement."
      - "Offer multiple ways to phrase the problem instead of assuming the first response is correct."
      - "Once confirmed, store the final statement in artifact.json."

  - step: "Set Project Direction"
    description: "Establish project direction using either a Vision Statement or OKRs."
    input: ["User Choice"]
    options:
      - "Vision Statement"
      - "OKRs"
    output: "Project Direction Document"
    rules:
      - "If OKRs are chosen, objectives must be inspirational and key results measurable."
      - "If a Vision Statement is chosen, it must describe the future state the project aims to achieve."
      - "Changes at this stage propagate through all artifacts (scope, requirements, etc.)."

  - step: "Define Scope or MVP"
    description: "Clarify project size and focus."
    input: ["Project Direction Document"]
    output: "Scope or MVP Decision"
    rules:
      - "No features should be created until the scope is locked."
      - "List in-scope vs. out-of-scope items, assumptions, and constraints (Agile/BABOK approach)."
      - "If using MVP, define the minimal set of features to deliver core value and test assumptions."

  - step: "Define Personas"
    description: "Identify users and key stakeholders."
    input: ["Scope or MVP Decision"]
    output: "Persona Definitions"
    format:
      - column: "Persona Name"
      - column: "Role"
      - column: "Goals"
      - column: "Pain Points"
    rules:
      - "All roles in later artifacts must align with defined personas."
      - "Include motivations and behaviors if relevant."
      - "Reference these personas in subsequent use cases, features, and user stories."

  - step: "Draft Use Case List"
    description: "Create a high-level list of use cases before detailing them."
    input: ["Persona Definitions"]
    output: "Use Case Inventory"
    format:
      - column: "Use Case ID"
      - column: "Brief Title"
      - column: "Primary Actor(s)"
      - column: "Short Goal Statement"
    rules:
      - "No detailed flows or alternate scenarios at this stage—only basic use case definitions."
      - "Each use case references at least one persona from the previous step."
      - "Stakeholders approve this list before proceeding to full details."

  - step: "Complete Use Cases"
    description: "Fully detail each use case in Alistair Cockburn’s style using a two-column table for user/system actions."
    input: ["Use Case Inventory"]
    output: "Use Cases Document"
    format:
      - column: "Use Case ID"
      - column: "Title"
      - column: "Scope"
      - column: "Primary Actor"
      - column: "Preconditions"
      - column: "Main Flow (User/System Table)"
        table:
          columns:
            - "User Action"
            - "System Action"
      - column: "Alternate Flows (User/System Table)"
        table:
          columns:
            - "User Action"
            - "System Action"
      - column: "Postconditions"
    rules:
      - "Expand each use case with scope, level, triggers, main flow, alternate flows, and postconditions."
      - "Document main flow and alternate flows in a table with two columns: one for User Action, one for System Action."
      - "Ensure each use case is fully dressed (Cockburn): includes stakeholders, success guarantees, etc."
      - "Reference relevant business goals or personas for clarity."

  - step: "Define Business Requirements (BRD)"
    description: "List what users must be able to do."
    input: ["Use Cases"]
    output: "Business Requirements Document (BRD)"
    format:
      - column: "BRD ID"
      - column: "Requirement Description"
    rules:
      - "Requirements must be user-focused."
      - "Apply CBAP and SMART criteria (Specific, Measurable, Achievable, Relevant, Time-bound)."
      - "Assign unique IDs for traceability (e.g., BR-001)."
      - "Each business requirement should map back to the business problem or objective."

  - step: "Define Functional Requirements (FRD)"
    description: "List what the system must do."
    input: ["Business Requirements Document (BRD)"]
    output: "Functional Requirements Document (FRD)"
    format:
      - column: "FRD ID"
      - column: "Requirement Description"
    rules:
      - "FRD describes system behaviors, not user actions."
      - "Tie each FRD item to at least one BRD item via unique IDs."
      - "Ensure these system requirements are specific, feasible, and aligned with business goals."

  - step: "Generate Feature List"
    description: "Create a raw list of features from BRD and FRD."
    input: ["BRD", "FRD"]
    output: "Feature List"
    format:
      - column: "Feature ID"
      - column: "Feature Name"
      - column: "Source (BRD/FRD)"
    rules:
      - "No detailed feature descriptions or acceptance criteria yet."
      - "Strictly a raw inventory of features based on the requirements."
      - "Each feature references the requirement(s) it implements (traceability)."

  - step: "Write Out Features"
    description: "Define each feature with description and acceptance criteria (AC)."
    input: ["Feature List"]
    output: "Features with Description & AC"
    format:
      - column: "Feature ID"
      - column: "Description"
      - column: "Acceptance Criteria"
    rules:
      - "AC must be clear, testable, and relevant to the feature."
      - "Apply INVEST to ensure features are independent, small, and valuable."
      - "Include unique IDs for acceptance criteria if needed, for test mapping."
      - "Stakeholders approve detailed features before proceeding."

  - step: "Create Traceability Matrix"
    description: "Map Features to BRD/FRD references."
    input: ["Features", "BRD", "FRD"]
    output: "Traceability Matrix"
    format:
      - column: "Feature ID"
      - column: "Feature Name"
      - column: "BRD Ref"
      - column: "FRD Ref"
    rules:
      - "Ensure every BR/FR item has at least one corresponding feature."
      - "Extend the matrix to acceptance criteria and test cases if desired (end-to-end coverage)."
      - "No orphan or duplicate requirements or features—maintain consistency."

  - step: "Ask User for Preferred User Story Format"
    description: "User must choose between normal user story format or Gherkin syntax."
    input: ["User Selection"]
    output: "User Story Format Selection"
    options:
      - "Normal"
      - "Gherkin"
    rules:
      - "Do not proceed until the user selects a format."
      - "All future stories must follow the chosen format strictly."

  - step: "Generate User Stories"
    description: "Break down selected feature into detailed user stories."
    input: ["Selected Feature", "User Story Format Selection"]
    output: "User Stories in Chosen Format"
    format:
      normal:
        - column: "Story ID"
        - column: "User Story"
        - column: "Acceptance Criteria"
      gherkin:
        - format: |
            Scenario: <Scenario Name>
            Given <Precondition>
            When <Action>
            Then <Expected Outcome>
    rules:
      - "Only generate stories after a feature is selected."
      - "Strictly follow the user-chosen format (Normal or Gherkin)."
      - "Apply INVEST principles to each story: Independent, Negotiable, Valuable, Estimable, Small, Testable."
      - "Trace each story back to its feature and acceptance criteria for full coverage."
